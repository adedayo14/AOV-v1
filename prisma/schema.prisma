// Single Prisma schema - Production PostgreSQL
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Settings {
  id                      String   @id @default(cuid())
  shop                    String   @unique
  
  // Core Features
  enableApp               Boolean  @default(true)
  enableStickyCart        Boolean  @default(true)
  showOnlyOnCartPage      Boolean  @default(false)
  autoOpenCart            Boolean  @default(true)
  enableFreeShipping      Boolean  @default(false)
  freeShippingThreshold   Float    @default(0)
  
  // Advanced Features
  enableRecommendations   Boolean  @default(false)
  enableAddons            Boolean  @default(false)
  enableDiscountCode      Boolean  @default(true)
  enableNotes             Boolean  @default(false)
  enableExpressCheckout   Boolean  @default(true)
  enableAnalytics         Boolean  @default(false)
  // Dev-only fields for title case options
  enableRecommendationTitleCaps Boolean @default(false)
  // Dev-only toggle in dev schema; safe to keep for prod alignment
  
  // Cart Behavior & Position
  cartPosition            String   @default("bottom-right")
  cartIcon                String   @default("cart")
  
  // Messages & Text
  freeShippingText        String   @default("You're {amount} away from free shipping!")
  freeShippingAchievedText String  @default("ðŸŽ‰ Congratulations! You've unlocked free shipping!")
  recommendationsTitle    String   @default("You might also like")
  actionText              String   @default("Add discount code")
  addButtonText           String   @default("Add")
  checkoutButtonText      String   @default("CHECKOUT")
  applyButtonText         String   @default("Apply")
  // Optional link texts (present in dev schema)
  discountLinkText        String   @default("+ Got a promotion code?")
  notesLinkText           String   @default("+ Add order notes")
  
  // Appearance
  backgroundColor         String   @default("#ffffff")
  textColor               String   @default("#1A1A1A")
  buttonColor             String   @default("#000000")
  buttonTextColor         String   @default("#ffffff")
  recommendationsBackgroundColor String @default("#ecebe3")
  shippingBarBackgroundColor String @default("#f0f0f0")
  shippingBarColor        String   @default("#121212")
  
  // Recommendation Settings
  recommendationLayout    String   @default("horizontal")
  maxRecommendations      Int      @default(6)
  maxRecommendationProducts Int    @default(4)
  complementDetectionMode String   @default("automatic")
  manualRecommendationProducts String @default("")
  
  // Progress Bar System
  progressBarMode         String   @default("free-shipping") // "free-shipping", "gift-gating", "combined"
  enableGiftGating        Boolean  @default(false)
  giftProgressStyle       String   @default("single-next") // "stacked", "single-multi", "single-next"
  giftThresholds          String   @default("[]") // JSON array of gift thresholds

  // Legacy and UI fields used in dev schema (safe as additive columns)
  stickyCartShowIcon      Boolean  @default(true)
  stickyCartShowCount     Boolean  @default(true)
  stickyCartShowTotal     Boolean  @default(true)
  stickyCartBackgroundColor String @default("#000000")
  stickyCartTextColor     String   @default("#ffffff")
  stickyCartCountBadgeColor String @default("#ff4444")
  stickyCartCountBadgeTextColor String @default("#ffffff")
  stickyCartBorderRadius  Int      @default(25)
  giftNoticeText          String   @default("Free gift added: {{product}} (worth {{amount}})")
  giftPriceText           String   @default("FREE")

  // ML/Privacy Settings (required for AI Personalization section)
  mlPersonalizationMode   String   @default("basic")
  enableMLRecommendations Boolean  @default(false)
  mlPrivacyLevel          String   @default("basic")
  enableAdvancedPersonalization Boolean @default(false)
  enableBehaviorTracking  Boolean  @default(false)
  mlDataRetentionDays     String   @default("30")
  hideRecommendationsAfterThreshold Boolean @default(false)
  enableThresholdBasedSuggestions Boolean @default(false)
  thresholdSuggestionMode String   @default("smart")
  enableManualRecommendations Boolean @default(false)

  // Smart Bundle Settings
  enableSmartBundles      Boolean  @default(false)
  bundlesOnProductPages   Boolean  @default(true)
  bundlesInCartDrawer     Boolean  @default(false)
  bundlesOnCollectionPages Boolean @default(false)
  bundlesOnCartPage       Boolean  @default(false)
  bundlesOnCheckoutPage   Boolean  @default(false)
  defaultBundleDiscount   String   @default("15")
  bundleTitleTemplate     String   @default("Complete your setup")
  bundleDiscountPrefix    String   @default("BUNDLE")
  bundleConfidenceThreshold String @default("medium")
  bundleSavingsFormat     String   @default("both")
  showIndividualPricesInBundle Boolean @default(true)
  autoApplyBundleDiscounts Boolean @default(true)

  // Theme App Embed Status
  themeEmbedEnabled       Boolean  @default(false)
  themeEmbedLastSeen      DateTime?
  
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

// Bundle Management System
model Bundle {
  id              String   @id @default(cuid())
  shop            String
  name            String
  description     String?
  type            String   // "manual", "category", "ai_suggested" 
  status          String   @default("draft") // "draft", "active", "paused"
  
  // Discount Configuration
  discountType    String   @default("percentage") // "percentage", "fixed"
  discountValue   Float    @default(0)
  
  // Bundle Rules
  categoryIds     String?  // JSON array of category IDs for category bundles
  productIds      String   // JSON array of product IDs
  minProducts     Int      @default(2) // Minimum products required for bundle
  maxProducts     Int?     // Maximum products allowed (null = unlimited)
  
  // AI Bundle Settings
  aiAutoApprove   Boolean  @default(false) // Auto-show AI bundles or require approval
  aiDiscountMax   Float?   // Maximum discount AI can apply
  
  // Performance Tracking
  totalViews      Int      @default(0)
  totalAddToCart  Int      @default(0) 
  totalPurchases  Int      @default(0)
  totalRevenue    Float    @default(0)
  
  // Bundle Configuration
  displayTitle    String?  // Custom title for storefront
  displayRules    String?  // JSON: display conditions, triggers, etc.
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  bundles         BundleProduct[]
  
  @@index([shop])
}

model BundleProduct {
  id         String   @id @default(cuid())
  bundleId   String
  productId  String   // Shopify product ID
  variantId  String?  // Specific variant ID (optional)
  position   Int      @default(0) // Order in bundle
  required   Boolean  @default(false) // Required vs optional product
  
  // Product metadata (cached for performance)
  productTitle  String?
  productHandle String?
  productPrice  Float?
  
  createdAt  DateTime @default(now())
  
  // Relations  
  bundle     Bundle   @relation(fields: [bundleId], references: [id], onDelete: Cascade)
  
  @@index([bundleId])
  @@index([productId])
}

// Customer Bundle Interactions
model CustomerBundle {
  id           String   @id @default(cuid())
  shop         String
  customerId   String?  // Shopify customer ID (null for anonymous)
  bundleId     String
  sessionId    String?  // For anonymous tracking
  
  action       String   // "view", "add_to_cart", "purchase"
  cartValue    Float?   // Cart value when action occurred
  discountApplied Float? // Actual discount applied
  
  createdAt    DateTime @default(now())
  
  @@index([shop])
  @@index([bundleId])
  @@index([customerId])
}

// A/B Testing Models (keep in sync with development schema)
model ABExperiment {
  id                 Int       @id @default(autoincrement())
  shopId            String    @map("shop_id")
  name              String
  description       String?
  testType          String    @map("test_type")
  trafficAllocation Decimal   @default(1.0) @map("traffic_allocation")
  status            String    @default("draft")
  startDate         DateTime? @map("start_date")
  endDate           DateTime? @map("end_date")
  primaryMetric     String    @default("conversion_rate") @map("primary_metric")
  confidenceLevel   Decimal   @default(0.95) @map("confidence_level")
  minSampleSize     Int       @default(100) @map("min_sample_size")
  createdBy         String?   @map("created_by")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  variants     ABVariant[]
  assignments  ABAssignment[]
  events       ABEvent[]
  
  @@map("ab_experiments")
}

model ABVariant {
  id                Int     @id @default(autoincrement())
  experimentId      Int     @map("experiment_id")
  name              String
  description       String?
  trafficPercentage Decimal @map("traffic_percentage")
  isControl         Boolean @default(false) @map("is_control")
  configData        String  @default("{}") @map("config_data")
  totalVisitors     Int     @default(0) @map("total_visitors")
  totalConversions  Int     @default(0) @map("total_conversions")
  totalRevenue      Decimal @default(0.0) @map("total_revenue")
  createdAt         DateTime @default(now()) @map("created_at")

  experiment  ABExperiment   @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  assignments ABAssignment[]
  events      ABEvent[]
  
  @@map("ab_variants")
}

model ABAssignment {
  id             Int       @id @default(autoincrement())
  experimentId   Int       @map("experiment_id")
  variantId      Int       @map("variant_id")
  userIdentifier String    @map("user_identifier")
  identifierType String    @map("identifier_type")
  shopId         String    @map("shop_id")
  assignedAt     DateTime  @default(now()) @map("assigned_at")
  expiresAt      DateTime? @map("expires_at")

  experiment ABExperiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  variant    ABVariant    @relation(fields: [variantId], references: [id], onDelete: Cascade)
  events     ABEvent[]
  
  @@unique([experimentId, userIdentifier, identifierType])
  @@map("ab_assignments")
}

model ABEvent {
  id             Int      @id @default(autoincrement())
  experimentId   Int      @map("experiment_id")
  variantId      Int      @map("variant_id")
  assignmentId   Int      @map("assignment_id")
  eventType      String   @map("event_type")
  shopId         String   @map("shop_id")
  userIdentifier String   @map("user_identifier")
  sessionId      String?  @map("session_id")
  pageUrl        String?  @map("page_url")
  eventValue     Decimal  @default(0.0) @map("event_value")
  eventData      String   @default("{}") @map("event_data")
  timestamp      DateTime @default(now())

  experiment ABExperiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  variant    ABVariant    @relation(fields: [variantId], references: [id], onDelete: Cascade)
  assignment ABAssignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  
  @@map("ab_events")
}

model ABResultsCache {
  id           Int      @id @default(autoincrement())
  experimentId Int      @map("experiment_id")
  variantId    Int      @map("variant_id")
  metric       String
  value        Decimal
  confidence   Decimal
  pValue       Decimal? @map("p_value")
  sampleSize   Int      @map("sample_size")
  calculatedAt DateTime @default(now()) @map("calculated_at")
  
  @@unique([experimentId, variantId, metric])
  @@map("ab_results_cache")
}
